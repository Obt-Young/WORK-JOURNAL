-------------------进程组------------------
#1  父进程可以给子进程设置进程组，使用setpgid
#2  每个进程都属于一个进程组，当某个进程的进程ID和进程组ID一样时，这个进程就是进程组组长
#3  进程可以自己决定自己属于哪个进程组，通过setpgid来设置
#4  一个进程只能给“自己”和“自己的子进程”设置进程组，  然而 ！  一旦“子进程”使用了exec系函数，那么其父进程无法再给“子进程”设置进程组了
#5  有一个小要点：虽然父进程可以setgpid来给子进程设置进程组id，子进程也可以自己setgpid来给自己设置进程组id，这两个动作虽然是冗余的，但是为了
    保险起见，还是双方都做一下比较好，因为父子进程的实际启动的先后顺序是未知的
#6  信号，可以发给一个进程，也可以发给一个“进程组”，这就很牛逼了，批量管理作业



-------------------会话------------------
#1  会话是一个或者多个“进程组的集合”
#2  进程组组长 无法成为 会话首进程 ， 一个进程要么当组长，要么当会话首进程， “不能身兼两职”
#3  setsid会返回会话首进程的“进程组id”，并以此作为会话id。可以理解为  “组长不能出面，只能让各组的组员去争取，争取到的功劳归组长”
#4  会话的用途？
#5  如何把一个进程组放入现有的会话中？



-------------------控制终端------------------
#1  一个会话可以有一个控制终端，这通常是终端设备或伪终端设备
#2  会话 = 一个前台进程组  +  N个后台进程组  ，  一个控制终端 = 一个会话 = 一个前台进程组 + N个后台进程组
    可以联想，在使用shell的时候，如果启动程序时不指定后台运行“&”，那么只能启动一个程序，这个程序会霸占屏幕的标准输入，标准输出等资源；
    而指定为“&”的后台进程，则可以有N多个
#3  在终端上Ctrl+c，信号会被发送给前台进程组的所有进程
#4  在终端上ctrl+\，信号会被发送给前台进程组的所有进程
#5  如何查看前台进程组的组ID，当前session id，以及属于session的所有组id，以及组中的所有进程id？
#6  tcgetpgrp函数用来获取前台进程组id
#7  tcsetpgrp函数用来切换前台进程组，比如某个会话有1,2，3，三个进程组，1是前台进程组，那么可通过这个函数把2切换成前台进程组




-------------------作业控制------------------
#1  















