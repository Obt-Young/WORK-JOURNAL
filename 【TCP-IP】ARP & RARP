=================================================================ARP=================================================================

#1  设备驱动程序从不检查ip头中的目的ip地址，只使用以太网头中的MAC地址
      （可以看出驱动程序只面向硬件，不面向软件协议层）
      
#2               -----ARP---->    
    32bit的IP                    48bit的MAC
                <-----RARP----
                
                
#3  一个ftp命令，产生了哪些看不到的底层动作：
    1）应用程序客户端先使用DNS服务做域名解析，把域名解析成ip地址（如果ftp参数就是ip地址，这一步就省了）；
    2）请求用TCP协议封包数据，以便与IP层沟通；
    3）建链请求数据被封入TCP segment，TCP segment再被封入IP packet，这一步把目的IP地址装入了报文中；
    4）查询目的IP地址对应的MAC地址  ————  利用ARP的广播功能，发出一个ARP请求到整个以太网上，请求中包含目的IP地址，“如果你是这个I P地址的
       拥有者，请回答你的硬件地址”；
    5）目的ip地址的主机收到这个广播消息后，就把自己的ip地址和MAC地址装入ARP应答报文中，发送给对端；
    6）本端收到应答后，就可以把MAC地址装入以太网Frame头中，丢到以太网上传输了。
    
    小结：相当于先通过ARP确认线路是通的，然后再进行后续动作
    
#4  内核（以太网驱动程序）必须知道对端的MAC地址才能发送数据给对端，只知道IP地址不行

#5  A R P高效运行的关键是由于每个主机上都有一个A R P高速缓存。这个高速缓存存放了最
    近I n t e r n e t地址到硬件地址之间的映射记录。高速缓存中每一项的生存时间一般为2 0分钟，起
    始时间从被创建时开始算起。
    
#6  A R P请求对应于T C P试图发送的初始T C P S Y N（同步）段
    A R P回答返回时，T C P报文段才可以被发送，因为硬件地址到这时才可能知道
    
      * 注 ： TCP的三次握手，四次挥手中的每一个SNY , ACK 等步骤，都是IP和ARP协议的多个动作的集合，这也体现了TCP为IP和ARP的上一层协议
    

=================================================================RARP=================================================================
ARP的反过程


