完整教程
http://www.runoob.com/linux/linux-comm-awk.html
--------------------------------------------------------------------------------------------------------
一句话概括：
取一行，按‘分隔符’分段，判断段是否满足要求，做相应的动作
--------------------------------------------------------------------------------------------------------
awk '[条件] {动作}' 输入
  注：条件可以没有
--------------------------------------------------------------------------------------------------------
处理a.txt，以.为分隔符，输出第2和第3个字段的值
awk '{printf $2,$3}' a.txt

处理a.txt，以.为分隔符，满足第2个字段值大于0，输出第2和第3个字段的值
awk -F. '$2>0 {printf $2,$3}' a.txt

处理a.txt，使用默认的空格为分隔符，满足第2个字段值大于0，且第3个字段大于第2个字段，输出第2和第3个字段+1的值
awk '$2>0 && $3>$2 {printf $2,$3+1}' a.txt
--------------------------------------------------------------------------------------------------------
内建变量
变量	描述
\$n	当前记录的第n个字段，字段间由FS分隔
\$0	完整的输入记录
ARGC	命令行参数的数目
ARGIND	命令行中当前文件的位置(从0开始算)
ARGV	包含命令行参数的数组
CONVFMT	数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组
ERRNO	最后一个系统错误的描述
FIELDWIDTHS	字段宽度列表(用空格键分隔)
FILENAME	当前文件名
FNR	各文件分别计数的行号
FS	字段分隔符(默认是任何空格)
IGNORECASE	如果为真，则进行忽略大小写的匹配
NF	一条记录的字段的数目
NR	已经读出的记录数，就是行号，从1开始
OFMT	数字的输出格式(默认值是%.6g)
OFS	输出记录分隔符（输出换行符），输出时用指定的符号代替换行符
ORS	输出记录分隔符(默认值是一个换行符)
RLENGTH	由match函数所匹配的字符串的长度
RS	记录分隔符(默认是一个换行符)
RSTART	由match函数所匹配的字符串的第一个位置
SUBSEP	数组下标分隔符(默认值是/034)
--------------------------------------------------------------------------------------------------------

awk脚本
http://www.runoob.com/linux/linux-comm-awk.html

